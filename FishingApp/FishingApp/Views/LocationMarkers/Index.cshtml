@model IEnumerable<FishingApp.Models.LocationMarkers>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="floater">
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    @Html.ActionLink("Casting", "Filter", "LocationMarkers", new { SelectByTechnique = "Casting"}, null)
</p>

<p>
    @Html.ActionLink("Shore Fishing", "Filter", "LocationMarkers", new { SelectByTechnique = "Shore Fishing" }, null)
</p>

<p>
    @Html.ActionLink("Bobber", "Filter", "LocationMarkers", new { SelectByTechnique = "Bobber" }, null)
</p>

<p>
    @Html.ActionLink("Trolling", "Filter", "LocationMarkers", new { SelectByTechnique = "Trolling" }, null)
</p>

<p>
    @Html.ActionLink("Jigging", "Filter", "LocationMarkers", new { SelectByTechnique = "Jigging" }, null)
</p>
</div>

    <div id="container" style="width: 100%;">
    <table class="table">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Enthusiast.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RodUsed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReelUsed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LineUsed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TechniqueModel.Technique)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Species)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTimeCaught)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BaitUsed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LakeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Enthusiast.Username)
                </td>
                <th>
                    @Html.DisplayFor(modelItem => item.RodUsed)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.ReelUsed)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.LineUsed)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.TechniqueModel.Technique)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Species)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTimeCaught)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BaitUsed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LakeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.MarkerID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.MarkerID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.MarkerID })
                </td>
            </tr>
        }

    </table>
</div>
<div id="map" style="height:500px"></div>

<script>
    function initMap() {
        var myLatLng = { lat: 43.101306, lng: -88.382168 }
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: myLatLng

        });

            @foreach (var item in Model) {
        <text>
        var marker = new google.maps.Marker({
            map: map,
            position: { lat: @item.Latitude, lng: @item.Longitude },
            title: 'Click for Info'
        });
        </text>
    }


        map.addListener('click', function (e) {
            placeMarkerAndPanTo(e.latLng, map);
        });
    }

    function placeMarkerAndPanTo(location, map) {
        var marker = new google.maps.Marker({
            url: 'https://localhost:44373/LocationMarkers/Create',
            title: 'Create Location',
            position: location,
            map: map
        });

        marker.addListener('click', function () {
            window.location.href = marker.url;
        });

    }



</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIni_ta1ZP0Guay2wh3t99DEhEAq3bkT0&callback=initMap"
        type="text/javascript"></script>

@*<script>

    </script>*@
